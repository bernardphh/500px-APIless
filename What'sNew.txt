---------------------------
Jun 11 2020:
Used jquerry's DataTables to handle long html table. Pagination allows the users:
- to have control of how many entries to be shown in one page
- to be able to sort the columns of the whole table quickly, while keeping the same number of entries per page.
- to be able to search the entire table for tags, names, titles, categories or any text. 

Note: 
There is a new folder "DataTables". Make sure it is extracted under the 'Output' folder.
The "Javascrips" folder under the 'Output' folder is no longer needed. It is deleted from the package.
All the result html files can be run off-line. Avatar images, photos thumbnails, 'Datatables' scripts, they are all local on disk.

---------------------------

Jun 7 2020:

Major updates related to the recent changes from 500px: some page structures, relative datetime (eg. 'a year ago'), roundup views count (eg. 3.2K)...
This version has breaking changes. SQLite database (500px_[user name].db) and some previously created CSV types are not compatible. 
Please delete the old files before runing the script.

Main noticable changes:

- New option 16, Notifications analysis:
   a) Create/update the local database (sqlite) with the latest notifications csv files on disk
   b) From the local database, analyze the data and produce two lists: all recorded notifications and unique users with analysis info. 	
   Analysis info includes:
  	For notifications: an overview table showing time frame between the first and the last notifications, 
  		           total of likes, comments, adding to galleries, counts of new followers, people you followed, people you have not followed.
  	For Unique users:  Last action date, number of actions, counts of Likes, Comments, galleries added, and following status

- Option 2 (Get photos list): Includes a list of top 5 photos: highest pulse, most viewed, most liked, most commented, and most featured in galleries
  and an overview table showing first, last update dates, totals of views, likes and commented 

- Option 6 (Get notifications): Data analysis is automatically done on newly extracted info. 
  The result will also have analysis info mentioned in option 16 (b) above.
   
- Moved helper functions related to html writing to a separate module named htmltools.py

Feature improvements:
- Login status is now lasts the entire session, no more logging out and loging in again between the tasks.
- Option 12 (Like n photos of each user in the last m notifications): simplified the process on getting the unique user names from the notifications. 


Bugs fixed:
- Extraction of notification is now started at the desired index  instead of always 0.    
- Option 7 (Check if a user follows you): Increase timeout to allow the slow server to load all following users
- Option 2 (Get photos list): Getting featured galleries: scrolling down until all galleries are loaded. It was maximum of 15 before.
  NOTE: 500px returns bogus galleries, especially on the photos near the end of the list (for instance, 115 featured galleries with the same title "favorites" was recorded. So we set a limit of 30 galleries until the problem is resolved) 
- Backspacing when entering user password: no more displaying of new line for each backspace keystroke 

Data structure changes:
- All the classes attribute named 'Status' now changed to 'Relationship'
- Photo object attribute "Featured in Galleries" is no longer has the galleries count prefixed to the list of galleries. The count now goes to a new attributed name 'Galleries Count'.
- Unique users csv files has two more columns: Actions Count and Last Action Date

---------------------------
Apr 25 2020:
- renamed column header Status --> Relationship
- ignore a notification item if the content can not identify
- initial photo_link in notifcation to ' ' instead of None, for composite primary keys
- fixed error on getting notifications, starting at the given index instead of always 0
- notification analysis: detail for each user: 
  Relationship, Last Action Date, Actions Count, Liked, Followed, Commented, Added To Gallery
- Local database: refactor database functions
  
---------------------------
Apr 5 2020:
- Moved helper functions into two separated py files: utils.py and webtools.py
- Reorganized supported py files under a new folder named ./common 
- Log activities to file on disk
  Log file name and location is configurable in the config.py. 

Bugs fixed :
- Made sure the configurable Output folder is setup related to the script location, not to the running folder: eg.
- On getting the list of users who liked a given photo (option 5), if you did not log in, the following status will be Unknown, instead of Not Follow.  
- More exception handlings

 Performance improved: 
- on getting the list of users who liked a photo, extract only the user name and display name if the task is to autolike their photos 


---------------------------
Mar 20 2020:
- New options during playing a slideshow:
	- Pause
	- Continue 
	- Stop   (user no longer needs to press ESC key three times to stop the slideshow) 

- Include in Main Menu the option to create a local database from the latest csv files on disk
 	
- Fixed bugs:
	- On getting the followers list: typo error that caused syntax error
	- On processing a notification element: indentation and function name errors
	  (convert_relative_datetime_string_to_absolute_date() )
---------------------------
Feb 21 2020:

1. Add one data analysis option: categorize users based on following statuses.
   Analyzing the Followers and Followings list, we produce 4 users lists: 
	- Users that followed you and you are following them ( reciprocally)  
	- Users that followed you but you are not following them
	- Users that you are following but they do not follow you
	- A combined list of all your followers and your followings, with the relationship marked down for each user.
   The user will be provided options to use the latest followers and followings csv files on disk, or start from scratch	

2. When extracting the followers list, we no longer need to extract following status to that user (because we now have (1) above). 
   So the optional login is no longer offered
   
3. Change some csv header names, from "Followers" to "Followers Count" and from "Count" to "Appearances Count"
    
4. On getting the notifications list, we now have option to specify the start index (it was always start at zero before)

5. Included some extra options, not available from the menu, not fully tested, for experiment and in progress. These options are 
   started backward from #99, such as:
	- handle_option_99 : Check/Update following statuses of people you are following, from the followings csv file
	- handle_option_98 : Like n photos of m users from a given users csv files.
	- handle_option_97 : Create SQL local database based on the latest csv files on disk. We then can use 3rd party, free visual app
                                  such as DB Browser for SQLite, to easy view, select, filter, sort the data.
    
6. Bug fixes and performance improvements

Notes: - Documents and snapshots are redone to reflect these changes
       - Some csv data files created  with the previous version will not work. They need to be re-extracted. 
---------------------------

Feb 9 2020:
- Converted relative time string (ex. "3 days ago") to absolute date string (ex. "2020 02 06")
- Used thread to handle the long process of loading the Chrome web driver, while the main program is showing the menu and taking user inputs
- Suppress some Chrome Driver log info sent to terminal window
- Included the photo category (landscapes, nature ...) when extracting each photo info
- Added optional function to extract the user id, to be called when we cannot extract it from the user avatar links (because it is 500px's generic default avatar)
- Bug fixes and performance improvements
---------------------------
Jan 14 2019:
- Moved classes definitions to a separated module (apiless.py) 
- Moved constants, configurable settings to a separated module (config.py)
- Added option to profile a function
- Added option to check the internet connection and to check whether the 500px server is down or not 
- Created local database using sqlite library 
- Added a module to interact with database
- Renamed classes and function names according to following conventions:
	- classes   : mixedCase, CapWords with initial lowercase character
	- functions : lowercase, with words separated by underscores
- Added column "Author Name" to photo list csv
- In slidesshow, suppress the popups 'Save password...' and 'Disable Developer Mode Extension'
- Bug fixes and performance improvements
---------------------------

Dec 18, 2019:
- used the external files for CSS and Javascripts:
		CSS to  [running folder]/css/styles.css  and 
		JS  to  [running folder]/javascripts/scripts 

- added option to view the result html off-line, by saving the user avatars and photo thumbnails on disk, at these default locations:
		User avatar:  		./avatars
		Photo thumbnails:	./thumbnails
  CON: even the avatar and thumnails images are very small in size, the process will definitely takes longer time to complete
  PRO: when viewing the result html file, for example, an html file with 1000 notification items on it, we would send 2000 images
  request to the server. This wouldn't be so nice, would it? Using local images will bring the server request to zero.  

- provided the easier way to change some settings for the whole script:
		HEADLESS_MODE = True                             
		USE_LOCAL_THUMBNAIL = True                       
		OUTPUT_DIR =  [running folder] / Output
		
- We no longer close the Chrome Driver after finishing an action. We keep it alive so that 
  a logged in session is still in affect.

---------------------------
...
---------------------------

Aug 3 2019:
- Adapted to 500px structure changes (after the famous "scheduled maintenance"). Affected option: 2. Get photos list

  The photo detail is no longer provided in the convenient format (json). We have to do harder work to get the data.
  We now also added one more info from a photo: the list of galleries, with link, that featured the photo.

---------------------------

Jul 15, 2019:
- Get photo statistics data: Views, Likes, Comments, Gallery count, Highest Pulse, Current Rating, Upload date, Tags list
- In the HTML file, provided option to sort the data, ascending or descending, on each column of the table
---------------------------

Jul 2 2019:
 - added column sort (asc, desc) when click on a talbe column
 - got more statistics on a photo
---------------------------

Jun 9 2019:
- Added thumbnails image on the output files
---------------------------

Jun 3 6 2019 2nd:
- support NSFW content when play slideshow if user logins
- made use of getPass module to mask the password entered

---------------------------

Jun3 6 2019:
Changed Output folder location from current (running) directory to %PROGRAMDATA%\500px_APIless\Output (C:\ProgramData\500px_Apiless\Output)
---------------------------
june 4 2019:
- Catched more Selenium exceptions: TimeoutException, NoSuchElementException
- Added new option: check if a user is following you.
- Merge two options 6, 7 into one: When we get the notifications list, we automatically filter the list to make another list
  containing just the unique users, along with its count of appearances.
- Showed process time for each task
- Minimized the usage of time.sleep() to improve performance.
